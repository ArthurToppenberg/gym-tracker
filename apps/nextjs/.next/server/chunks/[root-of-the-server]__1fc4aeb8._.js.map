{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/arthurtoppenberg/Documents/gym-tracker/packages/env/src/env.ts"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { config } from \"dotenv\";\nimport { z } from \"zod\";\n\nconfig({\n  path: \"../../.env\",\n});\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    NEXT_PUBLIC_NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n    NEXT_PUBLIC_NODE_ENV: process.env.NODE_ENV,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined.\n   * `SOME_VAR: z.string()` and `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;;;;AAEA,CAAA,GAAA,2LAAA,CAAA,SAAM,AAAD,EAAE;IACL,MAAM;AACR;AAEO,MAAM,MAAM,CAAA,GAAA,wRAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,cAAc,qOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,qOAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;QACN,sBAAsB,qOAAA,CAAA,IAAC,CACpB,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;GAGC,GACD,YAAY;QACV,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;QACR,oBAAoB;IACtB;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/arthurtoppenberg/Documents/gym-tracker/packages/db/src/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { env } from \"@gym/env\";\n\nconst createPrismaClient = (): PrismaClient => {\n  return new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n};\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const db: PrismaClient = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,qBAAqB;IACzB,OAAO,IAAI,6HAAA,CAAA,eAAY,CAAC;QACtB,KACE,+HAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;YAAS;SAAO,GAAG;YAAC;SAAQ;IAC3E;AACF;AAEA,MAAM,kBAAkB;AAIjB,MAAM,KAAmB,gBAAgB,MAAM,IAAI;AAE1D,IAAI,+HAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///Users/arthurtoppenberg/Documents/gym-tracker/packages/trpc/src/auth/config.ts"],"sourcesContent":["import { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { type DefaultSession, type NextAuthConfig } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport { compare } from \"bcryptjs\";\nimport { db } from \"@gym/db\";\n\n/**\n * Module augmentation for `next-auth` types. Allows us to add custom properties to the `session`\n * object and keep type safety.\n *\n * @see https://next-auth.js.org/getting-started/typescript#module-augmentation\n */\ndeclare module \"next-auth\" {\n  interface Session extends DefaultSession {\n    user: {\n      id: string;\n      // ...other properties\n      // role: UserRole;\n    } & DefaultSession[\"user\"];\n  }\n\n  // interface User {\n  //   // ...other properties\n  //   // role: UserRole;\n  // }\n}\n\n/**\n * Options for NextAuth.js used to configure adapters, providers, callbacks, etc.\n *\n * @see https://next-auth.js.org/configuration/options\n */\nexport const authConfig = {\n  providers: [\n    CredentialsProvider({\n      name: \"credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" }\n      },\n      async authorize(credentials) {\n        const email = typeof credentials.email === \"string\" ? credentials.email : \"\";\n        const password = typeof credentials.password === \"string\" ? credentials.password : \"\";\n\n        if (!email || !password) {\n          return null;\n        }\n\n        const user = await db.user.findUnique({\n          where: { email }\n        });\n\n        if (!user || !user.password) {\n          return null;\n        }\n\n        const isPasswordValid = await compare(\n          password,\n          user.password\n        );\n\n        if (!isPasswordValid) {\n          return null;\n        }\n\n        return {\n          id: user.id,\n          email: user.email,\n          name: user.name,\n          image: user.image,\n        };\n      }\n    })\n  ],\n  adapter: PrismaAdapter(db),\n  session: {\n    strategy: \"jwt\"\n  },\n  pages: {\n    signIn: \"/auth/signin\",\n  },\n  callbacks: {\n    session: ({ session, token }) => ({\n      ...session,\n      user: {\n        ...session.user,\n        id: token.sub,\n      },\n    }),\n  },\n} satisfies NextAuthConfig;\n"],"names":[],"mappings":";;;AAAA;AAEA;AAAA;AACA;AACA;;;;;AA4BO,MAAM,aAAa;IACxB,WAAW;QACT,CAAA,GAAA,wNAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,MAAM,QAAQ,OAAO,YAAY,KAAK,KAAK,WAAW,YAAY,KAAK,GAAG;gBAC1E,MAAM,WAAW,OAAO,YAAY,QAAQ,KAAK,WAAW,YAAY,QAAQ,GAAG;gBAEnF,IAAI,CAAC,SAAS,CAAC,UAAU;oBACvB,OAAO;gBACT;gBAEA,MAAM,OAAO,MAAM,iIAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;oBACpC,OAAO;wBAAE;oBAAM;gBACjB;gBAEA,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;oBAC3B,OAAO;gBACT;gBAEA,MAAM,kBAAkB,MAAM,CAAA,GAAA,wLAAA,CAAA,UAAO,AAAD,EAClC,UACA,KAAK,QAAQ;gBAGf,IAAI,CAAC,iBAAiB;oBACpB,OAAO;gBACT;gBAEA,OAAO;oBACL,IAAI,KAAK,EAAE;oBACX,OAAO,KAAK,KAAK;oBACjB,MAAM,KAAK,IAAI;oBACf,OAAO,KAAK,KAAK;gBACnB;YACF;QACF;KACD;IACD,SAAS,CAAA,GAAA,iVAAA,CAAA,gBAAa,AAAD,EAAE,iIAAA,CAAA,KAAE;IACzB,SAAS;QACP,UAAU;IACZ;IACA,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAK,CAAC;gBAChC,GAAG,OAAO;gBACV,MAAM;oBACJ,GAAG,QAAQ,IAAI;oBACf,IAAI,MAAM,GAAG;gBACf;YACF,CAAC;IACH;AACF","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///Users/arthurtoppenberg/Documents/gym-tracker/packages/trpc/src/auth/index.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport { cache } from \"react\";\n\nimport { authConfig } from \"./config\";\n\nconst { auth: uncachedAuth, handlers, signIn, signOut } = NextAuth(authConfig);\n\nconst auth = cache(uncachedAuth);\n\nexport { auth, handlers, signIn, signOut };\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAEA;;;;AAEA,MAAM,EAAE,MAAM,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4XAAA,CAAA,UAAQ,AAAD,EAAE,2IAAA,CAAA,aAAU;AAE7E,MAAM,OAAO,CAAA,GAAA,wWAAA,CAAA,QAAK,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///Users/arthurtoppenberg/Documents/gym-tracker/apps/nextjs/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { handlers } from \"@gym/trpc/auth\";\n\nexport const { GET, POST } = handlers;\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,0IAAA,CAAA,WAAQ","debugId":null}}]
}